{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/atoms/Link/index.tsx","webpack:///./src/components/atoms/Layout/index.tsx"],"names":["MainPage","className","src","alt","href","Link","props","children","onClick","buttonProps","cn","useMemo","join","onClickHref","useCallback","e","test","isExternalHref","preventDefault","navigate","Layout","divProps"],"mappings":"0FAAA,oDAuBeA,UAjBE,kBACf,kBAAC,IAAD,CAAQC,UAAW,aACjB,yBAAKA,UAAW,WACd,yBAAKC,IAAI,sBAAsBC,IAAI,YACnC,qCAEF,kBAAC,IAAD,CAAMF,UAAW,OAAQG,KAAK,YAA9B,mBAGA,yBAAKH,UAAW,QACd,kBAAC,IAAD,CAAMG,KAAK,0BAAX,WACA,kBAAC,IAAD,CAAMA,KAAK,QAAX,QACA,kBAAC,IAAD,CAAMA,KAAK,4BAAX,c,kGCyBSC,IA/Be,SAACC,GAAiB,IACtCC,EAAuDD,EAAvDC,SAAUN,EAA6CK,EAA7CL,UAAWO,EAAkCF,EAAlCE,QAASJ,EAAyBE,EAAzBF,KAASK,E,oIADD,CACiBH,EADjB,2CAExCI,EAAKC,mBAAQ,iBAAM,CAAC,OAAQV,GAAWW,KAAK,OAAM,CAACX,IAGnDY,EAAcC,uBAClB,SAACC,GACOP,GACJA,EAAQO,GAVO,SAACX,GAAD,MAAkB,gBAAgBY,KAAKZ,GAenDa,CAAeb,KAElBW,EAAEG,iBAGFC,mBAASf,MAGb,CAACI,EAASJ,EAAMe,aAGlB,OACE,qCAAGlB,UAAWS,EAAIF,QAASK,EAAaT,KAAMA,GAAUK,GACrDF,K,iGCfQa,IAXiB,SAACd,GAAU,IACjCC,EAAqCD,EAArCC,SAAUN,EAA2BK,EAA3BL,UAAcoB,E,oIADS,CACIf,EADJ,0BAEnCI,EAAKC,mBAAQ,iBAAM,CAAC,SAAUV,GAAWW,KAAK,OAAM,CAACX,IAE3D,OACE,yCAASoB,EAAT,CAAmBpB,UAAWS,IAC3BH","file":"component---src-pages-index-tsx-f6c4feeb467eee26d171.js","sourcesContent":["import './styles.css';\n\nimport React from 'react';\nimport Link from '../components/atoms/Link';\nimport Layout from '../components/atoms/Layout';\n\nconst MainPage = () => (\n  <Layout className={'main-page'}>\n    <div className={'profile'}>\n      <img src=\"/images/profile.png\" alt=\"profile\" />\n      <p>OPNay</p>\n    </div>\n    <Link className={'desc'} href=\"/Working\">\n      ðŸ§° í˜„ìž¬ ê³µì‚¬ì¤‘ìž…ë‹ˆë‹¤...\n    </Link>\n    <div className={'menu'}>\n      <Link href=\"https://blog.opnay.com\">Tistory</Link>\n      <Link href=\"blog\">Blog</Link>\n      <Link href=\"https://github.com/opnay\">Github</Link>\n    </div>\n  </Layout>\n);\n\nexport default MainPage;\n","import './styles.css';\n\nimport React, { useMemo, useCallback, MouseEvent } from 'react';\nimport { navigate } from '@reach/router';\n\ntype Props = React.DetailedHTMLProps<\n  React.AnchorHTMLAttributes<HTMLAnchorElement>,\n  HTMLAnchorElement\n>;\n\nconst isExternalHref = (href: string) => /^https?:\\/\\//g.test(href);\n\nconst Link: React.FC<Props> = (props: Props) => {\n  const { children, className, onClick, href, ...buttonProps } = props;\n  const cn = useMemo(() => ['link', className].join(' '), [className]);\n\n  // Enable href\n  const onClickHref = useCallback(\n    (e: MouseEvent<HTMLAnchorElement>) => {\n      if (!!onClick) {\n        onClick(e);\n      }\n\n      // We use `navigate` of @reach/router\n      // instead of anchor's href attribute for PWA.\n      if (!isExternalHref(href)) {\n        // Disable href function\n        e.preventDefault();\n\n        // Navigate to PWA page.\n        navigate(href);\n      }\n    },\n    [onClick, href, navigate]\n  );\n\n  return (\n    <a className={cn} onClick={onClickHref} href={href} {...buttonProps}>\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import './styles.css';\nimport './prism.css';\n\nimport React, { useMemo } from 'react';\n\ntype Props = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> & {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = (props) => {\n  const { children, className, ...divProps } = props;\n  const cn = useMemo(() => ['layout', className].join(' '), [className]);\n\n  return (\n    <div {...divProps} className={cn}>\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}